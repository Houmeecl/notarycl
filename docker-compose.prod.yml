version: '3.8'

services:
  # Base de datos PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: docusignpro_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: docusignpro
      POSTGRES_USER: docusign_user
      POSTGRES_PASSWORD: ${DB_PASSWORD:-change_this_password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backups:/backups
    ports:
      - "5432:5432"
    networks:
      - docusignpro_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U docusign_user -d docusignpro"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Aplicación DocuSignPro
  app:
    build:
      context: .
      dockerfile: Dockerfile.prod
    container_name: docusignpro_app
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 3000
      HOST: 0.0.0.0
      DATABASE_URL: postgresql://docusign_user:${DB_PASSWORD:-change_this_password}@postgres:5432/docusignpro
    env_file:
      - .env.prod
    volumes:
      - app_uploads:/app/uploads
      - app_logs:/app/logs
      - ./backups:/app/backups
    ports:
      - "3000:3000"
    networks:
      - docusignpro_network
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx como proxy reverso
  nginx:
    image: nginx:alpine
    container_name: docusignpro_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./deployment/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./deployment/nginx-site.conf:/etc/nginx/conf.d/default.conf:ro
      - nginx_logs:/var/log/nginx
      - certbot_certs:/etc/letsencrypt
      - certbot_www:/var/www/certbot
    networks:
      - docusignpro_network
    depends_on:
      - app

  # Certbot para SSL
  certbot:
    image: certbot/certbot
    container_name: docusignpro_certbot
    volumes:
      - certbot_certs:/etc/letsencrypt
      - certbot_www:/var/www/certbot
    command: certonly --webroot --webroot-path=/var/www/certbot --email admin@${DOMAIN:-localhost} --agree-tos --no-eff-email -d ${DOMAIN:-localhost} -d www.${DOMAIN:-localhost}

  # Redis para cache y sesiones (opcional)
  redis:
    image: redis:7-alpine
    container_name: docusignpro_redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-change_this_redis_password}
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - docusignpro_network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Monitoreo con Prometheus (opcional)
  prometheus:
    image: prom/prometheus:latest
    container_name: docusignpro_prometheus
    restart: unless-stopped
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    volumes:
      - ./deployment/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"
    networks:
      - docusignpro_network

  # Grafana para visualización (opcional)
  grafana:
    image: grafana/grafana:latest
    container_name: docusignpro_grafana
    restart: unless-stopped
    environment:
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_PASSWORD:-admin123}
      GF_USERS_ALLOW_SIGN_UP: false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./deployment/grafana-dashboards:/etc/grafana/provisioning/dashboards:ro
    ports:
      - "3001:3000"
    networks:
      - docusignpro_network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  app_uploads:
    driver: local
  app_logs:
    driver: local
  nginx_logs:
    driver: local
  certbot_certs:
    driver: local
  certbot_www:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  docusignpro_network:
    driver: bridge